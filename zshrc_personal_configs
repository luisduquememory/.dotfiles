# CHECK THIS IS YOU RESTART p10k

# Display only the last directory segment
# Open ~/.p10k.zsh.
# Search for POWERLEVEL9K_SHORTEN_STRATEGY.
# Change the value of this parameter to truncate_to_last.

# Enable vi mode
bindkey -v

#eval "$(pyenv init -)"
#source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
export PATH="$HOME/.pyenv/bin:$PATH"
export PATH="/usr/local/bin:$PATH"
export PATH="$PYENV_ROOT/shims:$PATH"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
export LDFLAGS="-L/usr/local/opt/zlib/lib -L/usr/local/opt/bzip2/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include -I/usr/local/opt/bzip2/include"

# SET THE GLOBAL PYTHON VERSION
export PYENV_VERSION="3.7.11"

# custom alias
alias vim="nvim"
alias black="black --line-length=88 --skip-string-normalization"
alias katas="cd $HOME/code/katas/;python ./app.py;cd -"
alias clean_descriptions="python $HOME/code/scripts/clean_descriptions.py"
alias cleanout="python $HOME/code/scripts/cleanout.py"
alias swupdate="python $HOME/code/scripts/python2upgrade.py"
alias docker-rm-images="docker images -a | awk '{print $3}' | xargs docker rmi"
alias vimkeys="less $HOME/code/configs/nvim/keymaps.vim"

# swsdk alias
alias swip="swsdk integration:update -t patch"
alias swb="swsdk integration:build -s;swsdk integration:build -s -v 3.7"
alias swv="swsdk integration:validate -s"
alias swr="swsdk task:run -s -n "
alias swg="swsdk task:run -s --generate -n "
alias genin="swsdk task:generate-inputs -n "
alias genout="swsdk task:generate-outputs -n "

alias dev-swsdk="$HOME/code/swimlane-sdk-cli/packages/cli/bin/run"

alias cleanenv="python -m pip freeze | xargs python -m pip uninstall -y"
alias install_precommit="ln -sv $HOME/code/configs/pre-commit-config.yaml ./.pre-commit-config.yaml; python -m pip install --upgrade pip; python -m pip install pre-commit; pre-commit install;  echo '.pre-commit-config.yaml' >> .gitignore"

alias configs="cd $HOME/code/configs"


python $HOME/code/scripts/update_python_path.py
export PYTHONPATH=`cat $HOME/.pythonpathdata`
alias reloadzsh='source $HOME/.zshrc'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# update path to include python pip packages
export PATH=$HOME/.local/bin:$PATH



# Configuration for virtualenv
# if you change the python interpreter update this
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=$HOME/.pyenv/versions/3.7.11/bin/python
export VIRTUALENVWRAPPER_VIRTUALENV=$HOME/.pyenv/versions/3.7.11/bin/virtualenv
source $HOME/.pyenv/versions/3.7.11/bin/virtualenvwrapper.sh


export VISUAL=nvim
export EDITOR="$VISUAL"

#### Functions

function runtasklocally() {
	# $1 is the task name

	# 1. Build the container
	docker build -f $HOME/code/sdk-run/Dockerfile --build-arg PYTHON_VERSION=3.7  -t local/sdk-cli-run:3.7 $HOME/code/sdk-run > /dev/null 2>&1
	RUNIMAGE=$(docker images -a | grep local/sdk-cli-run | awk '{print $3}')
	echo $RUNIMAGE
	swsdk task:run -d /Users/luis.duque/code/swimlane-plugins/sw_armorblox -n $1 -s -i $RUNIMAGE -t testcase --jsonschema #--debug code

}
